name: üöÄ PROD Pipeline - Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production

env:
  # Production Environment Configuration
  ENVIRONMENT: production
  AZURE_CONTAINER_REGISTRY: smartsupplyregistry.azurecr.io
  CONTAINER_APP_NAME: smartsupply-health-prod
  RESOURCE_GROUP: SmartSupply-Health-RG
  LOCATION: East US
  # Production Resource Limits
  CPU_LIMIT: 2.0
  MEMORY_LIMIT: 4Gi
  MIN_REPLICAS: 2
  MAX_REPLICAS: 20

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_APP_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to Production Container App
      uses: azure/container-apps-deploy-action@v1
      with:
        acrName: smartsupplyacr
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.RESOURCE_GROUP }}
        imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}

    - name: Verify Production Deployment
      run: |
        echo "üöÄ Production deployment completed!"
        echo "Environment: ${{ env.ENVIRONMENT }}"
        echo "Container App: ${{ env.CONTAINER_APP_NAME }}"
        echo "Resources: ${{ env.CPU_LIMIT }} CPU, ${{ env.MEMORY_LIMIT }} Memory"
        echo "Scaling: ${{ env.MIN_REPLICAS }}-${{ env.MAX_REPLICAS }} replicas"
        
        # Get the production URL
        APP_URL=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
        echo "üåê Production URL: https://$APP_URL"
        echo "üîç Health Check: https://$APP_URL/health"
